# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ffmpeg_worker.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='ffmpeg_worker.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x13\x66\x66mpeg_worker.proto\"C\n\x0e\x46\x46mpegResponse\x12\x12\n\x08log_line\x18\x01 \x01(\tH\x00\x12\x13\n\texit_code\x18\x02 \x01(\x05H\x00\x42\x08\n\x06status\")\n\rFFmpegRequest\x12\x18\n\x10\x66\x66mpeg_arguments\x18\x01 \x03(\t2:\n\x06\x46\x46mpeg\x12\x30\n\ttranscode\x12\x0e.FFmpegRequest\x1a\x0f.FFmpegResponse\"\x00\x30\x01\x62\x06proto3'
)




_FFMPEGRESPONSE = _descriptor.Descriptor(
  name='FFmpegResponse',
  full_name='FFmpegResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_line', full_name='FFmpegResponse.log_line', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='exit_code', full_name='FFmpegResponse.exit_code', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='status', full_name='FFmpegResponse.status',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=23,
  serialized_end=90,
)


_FFMPEGREQUEST = _descriptor.Descriptor(
  name='FFmpegRequest',
  full_name='FFmpegRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ffmpeg_arguments', full_name='FFmpegRequest.ffmpeg_arguments', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=92,
  serialized_end=133,
)

_FFMPEGRESPONSE.oneofs_by_name['status'].fields.append(
  _FFMPEGRESPONSE.fields_by_name['log_line'])
_FFMPEGRESPONSE.fields_by_name['log_line'].containing_oneof = _FFMPEGRESPONSE.oneofs_by_name['status']
_FFMPEGRESPONSE.oneofs_by_name['status'].fields.append(
  _FFMPEGRESPONSE.fields_by_name['exit_code'])
_FFMPEGRESPONSE.fields_by_name['exit_code'].containing_oneof = _FFMPEGRESPONSE.oneofs_by_name['status']
DESCRIPTOR.message_types_by_name['FFmpegResponse'] = _FFMPEGRESPONSE
DESCRIPTOR.message_types_by_name['FFmpegRequest'] = _FFMPEGREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

FFmpegResponse = _reflection.GeneratedProtocolMessageType('FFmpegResponse', (_message.Message,), {
  'DESCRIPTOR' : _FFMPEGRESPONSE,
  '__module__' : 'ffmpeg_worker_pb2'
  # @@protoc_insertion_point(class_scope:FFmpegResponse)
  })
_sym_db.RegisterMessage(FFmpegResponse)

FFmpegRequest = _reflection.GeneratedProtocolMessageType('FFmpegRequest', (_message.Message,), {
  'DESCRIPTOR' : _FFMPEGREQUEST,
  '__module__' : 'ffmpeg_worker_pb2'
  # @@protoc_insertion_point(class_scope:FFmpegRequest)
  })
_sym_db.RegisterMessage(FFmpegRequest)



_FFMPEG = _descriptor.ServiceDescriptor(
  name='FFmpeg',
  full_name='FFmpeg',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=135,
  serialized_end=193,
  methods=[
  _descriptor.MethodDescriptor(
    name='transcode',
    full_name='FFmpeg.transcode',
    index=0,
    containing_service=None,
    input_type=_FFMPEGREQUEST,
    output_type=_FFMPEGRESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_FFMPEG)

DESCRIPTOR.services_by_name['FFmpeg'] = _FFMPEG

# @@protoc_insertion_point(module_scope)
